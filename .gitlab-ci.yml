stages:
  - lint
  - build

build_linux: &build_linux
  stage: build
  tags: [ubuntu]
  parallel:
    matrix:
      - CC: gcc
        CXX: g++
        BUILD_TYPE: [Release, Debug]
      - CC: clang
        CXX: clang++
        BUILD_TYPE: [Release, Debug]
  before_script: .ci/setup.sh
  script: .ci/build.sh
  when: always

build_linux_nix:
  <<: *build_linux
  before_script: .ci/setup.sh nix
  script:
    - |
      set -xeuo pipefail
      TMPDIR=$(mktemp -d)
      trap 'rm -rf "'"$TMPDIR"'"' EXIT
      nix develop -ic env "XDG_CACHE_HOME=$TMPDIR" "CC=$CC" "CXX=$CXX" "BUILD_TYPE=$BUILD_TYPE" .ci/build.sh

.lint-base: &lint-base
  stage: lint
  tags: [ubuntu]
  before_script: .ci/setup.sh nix

cmake-format:
  <<: *lint-base
  script: nix develop -ic .ci/lint.sh cmake-format

clang-format:
  <<: *lint-base
  script: nix develop -ic .ci/lint.sh clang-format

codespell:
  <<: *lint-base
  script: nix develop -ic .ci/lint.sh codespell

qt headers:
  <<: *lint-base
  script: nix develop -ic .ci/lint.sh qt_headers

clang-tidy:
  <<: *lint-base
  script: nix develop -ic .ci/lint.sh clang-tidy
